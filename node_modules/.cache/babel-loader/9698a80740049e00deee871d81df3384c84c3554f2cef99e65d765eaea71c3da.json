{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/OneDrive/Bureau/react Project/todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/HP/OneDrive/Bureau/react Project/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/HP/OneDrive/Bureau/react Project/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoApp(){// State to manage the task input value\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),taskValue=_useState2[0],SetTaskValue=_useState2[1];// State to manage the list of tasks\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];//Function to add a new task to the List\nvar addTask=function addTask(){var newTask={id:Date.now(),task:taskValue,completed:false};setTasks([].concat(_toConsumableArray(tasks),[newTask]));SetTaskValue('');};// Function to delete a task from the list\nvar deleteTask=function deleteTask(taskId){var filtredTask=tasks.filter(function(task){return task.id!==taskId;});setTasks(filtredTask);};// Function to toggle the completion status of a task\nvar toggleTaskCompletion=function toggleTaskCompletion(taskId){var updatedTasks=tasks.map(function(task){return task.id===taskId?_objectSpread(_objectSpread({},task),{},{completed:!task.completed}):task;});setTasks(updatedTasks);};// Function to clear all tasks from the list\nvar clearAllTasks=function clearAllTasks(){setTasks([]);};// Function to count and alert the number of incomplete tasks\nvar countIncompleteTasks=function countIncompleteTasks(){var incompleteTasksCount=tasks.filter(function(task){return task.completed===false;}).length;alert(\"Number of incomplete tasks: \".concat(incompleteTasksCount));};// Function to sort tasks alphabetically\nvar sortTasksAlphabetically=function sortTasksAlphabetically(){var sortedTasks=_toConsumableArray(tasks).sort(function(a,b){return a.task.localeCompare(b.task);});setTasks(sortedTasks);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mb-4\",children:\"Todo App\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group mb-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:taskValue,onChange:function onChange(e){return SetTaskValue(e.target.value);},placeholder:\"Enter task\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",type:\"button\",onClick:addTask,children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group\",children:tasks.map(function(task){return/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item \".concat(task.completed?'list-group-item-secondary':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[task.task,/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success mx-1\",onClick:function onClick(){return toggleTaskCompletion(task.id);},children:task.completed?'Uncomplete':'Complete'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return deleteTask(task.id);},children:\"Delete\"})]})]})},task.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary mx-1\",onClick:sortTasksAlphabetically,children:\"Sort Alphabetically\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info mx-1\",onClick:countIncompleteTasks,children:\"Count Incomplete Tasks\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mx-1\",onClick:clearAllTasks,children:\"Clear All Tasks\"})]})]});};export default TodoApp;","map":{"version":3,"names":["React","useState","TodoApp","taskValue","SetTaskValue","tasks","setTasks","addTask","newTask","id","Date","now","task","completed","deleteTask","taskId","filtredTask","filter","toggleTaskCompletion","updatedTasks","map","clearAllTasks","countIncompleteTasks","incompleteTasksCount","length","alert","sortTasksAlphabetically","sortedTasks","sort","a","b","localeCompare","e","target","value"],"sources":["C:/Users/HP/OneDrive/Bureau/react Project/todo/src/TodoApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TodoApp()  {\r\n    // State to manage the task input value\r\n    const [taskValue, SetTaskValue] = useState('');\r\n    // State to manage the list of tasks\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    //Function to add a new task to the List\r\n    const addTask = () => {\r\n        const newTask = { id: Date.now(), task: taskValue, completed: false };\r\n        setTasks([...tasks, newTask]);\r\n        SetTaskValue('');\r\n    }\r\n    // Function to delete a task from the list\r\n    const deleteTask = (taskId) => {\r\n        const filtredTask = tasks.filter(task => task.id !== taskId);\r\n        setTasks(filtredTask);\r\n    }\r\n\r\n    // Function to toggle the completion status of a task\r\n    const toggleTaskCompletion = (taskId) => {\r\n        const updatedTasks = tasks.map(task=> task.id === taskId ? {...task , completed :! task.completed} : task);\r\n        setTasks(updatedTasks);\r\n    };\r\n    // Function to clear all tasks from the list\r\n    const clearAllTasks = () => {\r\n        setTasks([]);\r\n    };\r\n\r\n    // Function to count and alert the number of incomplete tasks\r\n    const countIncompleteTasks = () =>{\r\n        const incompleteTasksCount = tasks.filter(task => task.completed === false).length;\r\n        alert(`Number of incomplete tasks: ${incompleteTasksCount}`);\r\n    };\r\n\r\n    // Function to sort tasks alphabetically\r\n    const sortTasksAlphabetically = () => {\r\n        const sortedTasks = [...tasks].sort((a, b) => a.task.localeCompare(b.task));\r\n        setTasks(sortedTasks);\r\n    };\r\n    return (\r\n        <div className=\"container mt-5\">\r\n          <h1 className=\"text-center mb-4\">Todo App</h1>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={taskValue}\r\n              onChange={(e) => SetTaskValue(e.target.value)}\r\n              placeholder=\"Enter task\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"button\" onClick={addTask}>Add Task</button>\r\n          </div>\r\n          <ul className=\"list-group\">\r\n            {tasks.map(task => (\r\n              <li key={task.id} className={`list-group-item ${task.completed ? 'list-group-item-secondary' : ''}`}>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  {task.task}\r\n                  <div>\r\n                    <button className=\"btn btn-success mx-1\" onClick={() => toggleTaskCompletion(task.id)}>\r\n                      {task.completed ? 'Uncomplete' : 'Complete'}\r\n                    </button>\r\n                    <button className=\"btn btn-danger\" onClick={() => deleteTask(task.id)}>Delete</button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"mt-3\">\r\n            <button className=\"btn btn-secondary mx-1\" onClick={sortTasksAlphabetically}>Sort Alphabetically</button>\r\n            <button className=\"btn btn-info mx-1\" onClick={countIncompleteTasks}>Count Incomplete Tasks</button>\r\n            <button className=\"btn btn-danger mx-1\" onClick={clearAllTasks}>Clear All Tasks</button>\r\n          </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}